# HR Assistant - Production Nginx Configuration
# Оптимизированная конфигурация для российских хостингов

# Основные настройки
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Оптимизация производительности
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # MIME types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;

    # Основные настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # Upstream серверы
    upstream frontend {
        server frontend:3000 max_fails=3 fail_timeout=30s;
    }

    upstream backend {
        server backend:8000 max_fails=3 fail_timeout=30s;
    }

    # HTTP сервер (редирект на HTTPS)
    server {
        listen 80;
        server_name your-domain.ru www.your-domain.ru;
        
        # Redirect all HTTP requests to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS сервер
    server {
        listen 443 ssl http2;
        server_name your-domain.ru www.your-domain.ru;

        # SSL конфигурация
        ssl_certificate /etc/letsencrypt/live/your-domain.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/your-domain.ru/privkey.pem;
        
        # SSL Security
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Security headers
        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # Размеры загрузок
        client_max_body_size 10M;
        client_body_buffer_size 128k;

        # Frontend (Next.js)
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Таймауты
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Backend API
        location /api {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Rate limiting для API
            limit_req zone=api burst=20 nodelay;
            
            # Таймауты для API
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Специальные endpoint'ы
        location /api/auth/login {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Строгий rate limiting для логина
            limit_req zone=login burst=5 nodelay;
        }

        # Health check
        location /health {
            proxy_pass http://backend/health;
            access_log off;
        }

        # Статические файлы Next.js
        location /_next/static {
            proxy_pass http://frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Загруженные файлы
        location /uploads {
            alias /app/uploads;
            expires 1d;
            add_header Cache-Control "public";
            
            # Ограничение доступа только к разрешенным типам
            location ~* \.(pdf|doc|docx)$ {
                add_header Content-Disposition "attachment";
            }
        }

        # Запрет доступа к служебным файлам
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ /\.env {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Robots.txt
        location = /robots.txt {
            alias /app/static/robots.txt;
            expires 1d;
        }

        # Favicon
        location = /favicon.ico {
            alias /app/static/favicon.ico;
            expires 1d;
        }

        # Ошибки
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Конфигурация для мониторинга (внутренняя сеть)
    server {
        listen 8080;
        server_name localhost;
        
        # Nginx status
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Prometheus metrics для Node Exporter
        location /metrics {
            proxy_pass http://127.0.0.1:9100/metrics;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }
}

# Дополнительные настройки для российских хостингов
# 
# Selectel Cloud:
# - Убедитесь что порты 80/443 открыты в firewall
# - Используйте Let's Encrypt для SSL
# 
# Yandex Cloud:
# - Настройте Application Load Balancer при масштабировании
# - Используйте Certificate Manager для SSL
# 
# VK Cloud:
# - Настройте Load Balancer в панели управления
# - Используйте встроенный SSL